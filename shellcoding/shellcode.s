# nice way to test and debug shellcode
# generate a elf and debug

# build with gcc -nostdlib -static shellbindsh.s -o shellcode-elf
# objdump -M intel -d shellcode-elf
# get shellcode with objcopy --dump-section .text=shellcode-raw shellcode-elf

.global _start
_start:
.intel_syntax noprefix
label1: # we can put labels all the way to use as names for breakpoints in gdb
	mov rax, 59 # syscall execve
label2:
	lea rdi, [rip+binsh] # first argument for execve is /bin/sh string
	mov rsi, 0 # second argument to execve, argv, NULL
	mov rdx, 0 # third argument to execve, envp, NULL
	int3 # we can hardcoded breakpoints to help when debug
	syscall # callllinnnngggg
binsh:
	.string "/bin/sh"
