import glob
from pwn import *

"""
math operations on registers_use and memory. For shorthand, when we say
A += B, it really means, A = A + B. Here are some useful instructions:
add reg1, reg2       <=>     reg1 += reg2
sub reg1, reg2       <=>     reg1 -= reg2
imul reg1, reg2      <=>     reg1 *= reg2
div
mov rax, reg1; div reg2 Notice: to use this instruction you need to first load rax with the desired register
you intended to be the divided. Then run div reg2, where reg2 is the divisor. This
results in:
rax = rdi / rsi; rdx = remainder
The quotient is placed in rax, the remainder is placed in rdx.
"""

context.arch = "amd64"
#context.log_level = "DEBUG"

# rdi / rsi -> put rdi in rax, div rsi, resultado estara em rax, resto estara em rdx
# pwntools will change SYS_exit to the respective syscall
assembly = """
    mov rax, rdi
    div rsi
"""

shellcode = asm(assembly, arch="amd64", os="linux")
#print(disasm(shellcode))

p = process(glob.glob('/challenge/embry*'))
print(p.recv(timeout=2).decode())
p.send(shellcode)
print(p.recvall().decode())